name: Release
on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Use Golang
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - name: Build with xgo
        uses: crazy-max/ghaction-xgo@v2
        with:
          xgo_version: latest
          go_version: ${{ matrix.go_version }}
          dest: build
          prefix: hack-browser-data
          pkg: cmd/hack-browser-data
          targets: windows/amd64,linux/arm64,darwin/amd64
          v: true
          x: false
          race: false
          ldflags: -s -w
          buildmode: default

      - name: Set Variable
        run: |
          echo "RELEASE_WIN64=hack-browser-data-${{ github.event.release.tag_name}}windows-64bit" >> $GITHUB_ENV
          echo "RELEASE_OSX=hack-browser-data-${{ github.event.release.tag_name}}osx-64bit" >> $GITHUB_ENV
          echo "RELEASE_LinuxAMD64=hack-browser-data-${{ github.event.release.tag_name}}linux-amd64" >> $GITHUB_ENV
      - name: Build zip
        run: |
          mv build/hack-browser-data-windows*amd64.exe "$RELEASE_WIN64".exe
          mv build/hack-browser-data-darwin-*amd64 "$RELEASE_OSX"
          mv build/hack-browser-data-linux-*amd64 "$RELEASE_LinuxAMD64"
          zip "$RELEASE_WIN64".zip "$RELEASE_WIN64".exe
          zip "$RELEASE_OSX".zip "$RELEASE_OSX"
          zip "$RELEASE_LinuxAMD64".zip "$RELEASE_LinuxAMD64"


      - name: Create Release
        id: create_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release - Windows 64bit
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.RELEASE_WIN64 }}.zip
          asset_name: ${{ env.RELEASE_WIN64 }}.zip
          asset_content_type: application/zip

      - name: Upload Release - Darwin amd64
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.RELEASE_OSX }}.zip
          asset_name: ${{ env.RELEASE_OSX }}.zip
          asset_content_type: application/zip

      - name: Upload Release - Linux amd64
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.RELEASE_LinuxAMD64 }}.zip
          asset_name: ${{ env.RELEASE_LinuxAMD64 }}.zip
          asset_content_type: application/zip